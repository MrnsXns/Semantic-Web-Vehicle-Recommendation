/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package semanticwebcarontology;

import com.hp.hpl.jena.ontology.DatatypeProperty;
import com.hp.hpl.jena.ontology.Individual;
import com.hp.hpl.jena.ontology.ObjectProperty;
import com.hp.hpl.jena.ontology.OntModel;
import com.hp.hpl.jena.ontology.OntModelSpec;
import com.hp.hpl.jena.query.Query;
import com.hp.hpl.jena.query.QueryExecution;
import com.hp.hpl.jena.query.QueryExecutionFactory;
import com.hp.hpl.jena.query.QueryFactory;
import com.hp.hpl.jena.query.QuerySolution;
import com.hp.hpl.jena.query.ResultSet;
import com.hp.hpl.jena.query.ResultSetFormatter;
import com.hp.hpl.jena.rdf.model.ModelFactory;
import com.hp.hpl.jena.rdf.model.RDFNode;
import com.hp.hpl.jena.util.FileManager;
import com.hp.hpl.jena.vocabulary.OWL2;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Mediamarkt
 */


public class MainWindow extends javax.swing.JFrame {
 public  String my_file(){String h="VehicleRecomendation(final).owl";return h;} 
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        Tittle_label = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ClassesComboBox = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        TypeVComboBox = new javax.swing.JComboBox<>();
        PriceTextField = new javax.swing.JTextField();
        ModelTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ScorejTextField = new javax.swing.JTextField();
        SpeedTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        FuelTextField = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        CategoryVComboBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        SafeTextField = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox6 = new javax.swing.JComboBox<>();
        jComboBox7 = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        textArea1 = new java.awt.TextArea();
        jTextField1 = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        CustomerTextLabel = new javax.swing.JLabel();
        CustomerTextField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        ModelComboBox5 = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        CustAgejComboBox5 = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        GenderComboBox = new javax.swing.JComboBox<>();
        ComboBox5 = new javax.swing.JComboBox<>();
        AddCustomerButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel19 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox5 = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();

        jButton3.setText("jButton3");

        jButton10.setText("jButton10");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Tittle_label.setFont(new java.awt.Font("Lucida Handwriting", 3, 24)); // NOI18N
        Tittle_label.setText("Welcome to Vehicle Recomendation App");

        jLabel1.setText("Instances by Class");

        ClassesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Click to see Classes" }));
        ClassesComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClassesComboBoxMouseClicked(evt);
            }
        });
        ClassesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClassesComboBoxActionPerformed(evt);
            }
        });

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Select type of Vehicle");

        TypeVComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "click to select type!", "Automobile", "Motorcycle" }));
        TypeVComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TypeVComboBoxMouseClicked(evt);
            }
        });
        TypeVComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TypeVComboBoxActionPerformed(evt);
            }
        });

        ModelTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModelTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Model name");

        jLabel4.setText("Price");

        jLabel5.setText("Score");

        jLabel7.setText("Top speed");

        jLabel6.setText("Fuel consumption");

        FuelTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FuelTextFieldActionPerformed(evt);
            }
        });

        jButton2.setText("Add Vehicle!");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        CategoryVComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "click to select category!" }));
        CategoryVComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CategoryVComboBoxMouseClicked(evt);
            }
        });
        CategoryVComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CategoryVComboBoxActionPerformed(evt);
            }
        });

        jLabel8.setText("Select Category");

        jLabel9.setText("Safe Score");

        jComboBox1.setBackground(new java.awt.Color(51, 0, 204));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Automobile", "Motorcycle", " " }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel11.setText("Total Sales by category ");

        jLabel12.setBackground(new java.awt.Color(102, 255, 51));
        jLabel12.setFont(new java.awt.Font("MV Boli", 2, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("Useful Queries");

        jLabel13.setText("Vehicle price<limit");

        jLabel14.setText("Vehicles by age range");

        jLabel15.setText("Customer rank (by money spent)");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Click to select" }));
        jComboBox3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox3MouseClicked(evt);
            }
        });
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "from" }));
        jComboBox6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox6MouseClicked(evt);
            }
        });
        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox6ActionPerformed(evt);
            }
        });

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "to" }));
        jComboBox7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox7MouseClicked(evt);
            }
        });
        jComboBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox7ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 0, 51));
        jButton5.setText("Go!");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(255, 0, 0));
        jButton6.setText("Go!");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(255, 0, 0));
        jButton7.setText("Go!");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(204, 0, 0));
        jButton8.setText("Go!");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jTextField1.setText("Enter limit(e.g 45000)");

        jButton9.setText("Clear Panel");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        CustomerTextLabel.setText("Customer name");

        jLabel16.setText("Vehicle Type n Model name(Ownership)");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Type" }));
        jComboBox4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox4MouseClicked(evt);
            }
        });
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        ModelComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Model" }));
        ModelComboBox5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ModelComboBox5MouseClicked(evt);
            }
        });
        ModelComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModelComboBox5ActionPerformed(evt);
            }
        });

        jLabel17.setText("Customer's age");

        CustAgejComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Age" }));
        CustAgejComboBox5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CustAgejComboBox5MouseClicked(evt);
            }
        });

        jLabel18.setText("Gender");

        GenderComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Man", "Woman" }));

        ComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Automobile ", "Motorcycle" }));

        AddCustomerButton.setBackground(new java.awt.Color(255, 0, 0));
        AddCustomerButton.setText("Add Customer");
        AddCustomerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddCustomerButtonMouseClicked(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jLabel19.setText("Colour");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel20.setText("See Specs of Vehicle");

        jButton11.setText("GO");
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton11MouseClicked(evt);
            }
        });

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jLabel10.setText("Specs of better vehicle(by score)");

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jScrollPane4.setViewportView(jTextArea4);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Automobile ", "Motorcycle" }));
        jComboBox2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox2MouseClicked(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Category", " " }));
        jComboBox5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox5MouseClicked(evt);
            }
        });
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });

        jButton4.setText("Compare");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel1)
                        .addGap(37, 37, 37)
                        .addComponent(ClassesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(45, 45, 45)
                                .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jButton4))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addGap(41, 41, 41)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(jButton11)))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Tittle_label)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9)
                                    .addComponent(CustomerTextLabel)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel19)
                                        .addComponent(jLabel6))
                                    .addComponent(jLabel3))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(TypeVComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33)
                                        .addComponent(jLabel8)
                                        .addGap(45, 45, 45)
                                        .addComponent(CategoryVComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jButton2)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(FuelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(SpeedTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(ScorejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(PriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(ModelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(SafeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(CustomerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(CustAgejComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(GenderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(ComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(32, 32, 32)
                                                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(56, 56, 56)
                                                    .addComponent(ModelComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 544, Short.MAX_VALUE)
                                .addComponent(AddCustomerButton)
                                .addGap(176, 176, 176)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton5)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel15)
                                        .addComponent(jLabel12)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel13)
                                                .addComponent(jLabel14))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(47, 47, 47)
                                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(54, 54, 54))))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel11)
                                            .addGap(35, 35, 35)
                                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(60, 60, 60)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButton8, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(71, 71, 71)
                                            .addComponent(jButton7)))))
                            .addGap(234, 234, 234))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(658, 658, 658))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(textArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap()))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(330, 330, 330)
                        .addComponent(jButton9)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(textArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(24, 24, 24)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(Tittle_label)
                                                    .addComponent(jLabel12))
                                                .addGap(34, 34, 34)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(jLabel1)
                                                    .addComponent(ClassesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jButton1)
                                                    .addComponent(jLabel2)
                                                    .addComponent(CategoryVComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel8)
                                                    .addComponent(TypeVComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(ModelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel11)
                                                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(5, 5, 5)
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(142, 142, 142)
                                                        .addComponent(jButton5))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addGroup(layout.createSequentialGroup()
                                                                        .addGap(76, 76, 76)
                                                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel3)
                                                                        .addGap(18, 18, 18)))
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                    .addComponent(PriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(jLabel4))
                                                                .addGap(47, 47, 47))
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGap(192, 192, 192)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(jButton6)
                                                                    .addComponent(jLabel13))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)))
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                            .addComponent(jLabel5)
                                                            .addComponent(ScorejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jLabel14)
                                                            .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jButton7))
                                                        .addGap(24, 24, 24)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(jLabel9)
                                                                .addComponent(SafeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGap(14, 14, 14)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                    .addComponent(jLabel15)
                                                                    .addComponent(jButton8))))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(SpeedTextField4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(86, 86, 86)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel6)
                                                            .addComponent(FuelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(54, 54, 54)))
                                                .addGap(3, 3, 3)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(16, 16, 16)
                                                        .addComponent(jLabel19)
                                                        .addGap(5, 5, 5))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(12, 12, 12)))
                                                .addGap(9, 9, 9)
                                                .addComponent(jButton2)
                                                .addGap(149, 149, 149)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(CustomerTextLabel)
                                                    .addComponent(CustomerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel20)
                                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jButton11)))
                                                .addGap(32, 32, 32)
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel16)
                                            .addComponent(ComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ModelComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(jLabel10)))
                                .addGap(92, 92, 92))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton9)
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17)
                                    .addComponent(CustAgejComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(GenderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddCustomerButton)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ClassesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClassesComboBoxActionPerformed
        // TODO add your handling code here:
       
        
    }//GEN-LAST:event_ClassesComboBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String a=ClassesComboBox.getSelectedItem().toString();
         // TODO add your handling code here:
         OntModel model = ModelFactory.createOntologyModel(); 
        InputStream in = FileManager.get().open( my_file() );
        if (in == null) {
        throw new IllegalArgumentException(
                                 "File: " + my_file()  + " not found");
    }

    // read the RDF/XML file
        model.read(in,"");
        String selected=ClassesComboBox.getSelectedItem().toString();
        
        String queryString ="PREFIX owl: <http://www.w3.org/2002/07/owl#>"+
        "PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>"+
        "PREFIX my: <http://www.semanticweb.org/car_ontology#>"+
        "PREFIX xsd:<http://www.w3.org/2001/XMLSchema#>"+
        
        "SELECT ?"+selected+" "+
            " WHERE {?"+selected+" a my:"+ a +"}";

            

    Query query = QueryFactory.create(queryString) ;


    QueryExecution qexec = QueryExecutionFactory.create(query, model) ;
    ResultSet rs = qexec.execSelect() ;
   
   String j=ResultSetFormatter.asText(rs);
    
    String j1=j.replace("http://www.semanticweb.org/car_ontology#","");

    jTextArea1.setText(j1);

    ResultSetFormatter.out(System.out, rs, query);
    
    
    qexec.close();
    
            
                
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ClassesComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClassesComboBoxMouseClicked
        // TODO add your handling code here:
        
        
         OntModel model = ModelFactory.createOntologyModel(); 
        InputStream in = FileManager.get().open( my_file() );
        if (in == null) {
        throw new IllegalArgumentException(
                                 "File: " + my_file()  + " not found");
    }

    // read the RDF/XML file
        model.read(in, "");
        
        
        String queryString ="PREFIX owl: <http://www.w3.org/2002/07/owl#>"+
        "PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>"+
        "PREFIX my: <http://www.semanticweb.org/car_ontology#>"+
        "PREFIX xsd:<http://www.w3.org/2001/XMLSchema#>"+
        
        "SELECT ?x "+
            " WHERE {?x a owl:Class}" ;

            

    Query query = QueryFactory.create(queryString) ;


    QueryExecution qexec = QueryExecutionFactory.create(query, model) ;
    ResultSet rs = qexec.execSelect() ;
    
    for (;rs.hasNext() ; ) {
      QuerySolution r = rs.nextSolution() ;
        RDFNode x = r.get("x"); 
        
        
    
   

   

String c=x.toString();
   //String rep=c.replace("^^http://www.w3.org/2001/XMLSchema#integer","");
   if(c.contains("http://www.semanticweb.org/car_ontology#")){
     String rep=c.replace("http://www.semanticweb.org/car_ontology#","");
     
     ClassesComboBox.addItem(rep);
             
    }}
    qexec.close();
    
            
    

    }//GEN-LAST:event_ClassesComboBoxMouseClicked

    private void ModelTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModelTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ModelTextFieldActionPerformed

    private void FuelTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FuelTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FuelTextFieldActionPerformed

    private void TypeVComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TypeVComboBoxActionPerformed
        // TODO add your handling code here:
        if (TypeVComboBox.getSelectedItem()=="Motorcycle"){SafeTextField.setText("Only For Automobiles"); SafeTextField.setEditable(false);}
        else {SafeTextField.setEditable(true);}
        
    }//GEN-LAST:event_TypeVComboBoxActionPerformed

    private void TypeVComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TypeVComboBoxMouseClicked
        
        
    }//GEN-LAST:event_TypeVComboBoxMouseClicked

    private void CategoryVComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CategoryVComboBoxActionPerformed
        // TODO add your handling code here:
        
        OntModel model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM_RULE_INF ); 
        InputStream in = FileManager.get().open( my_file() );
        if (in == null) {
        throw new IllegalArgumentException(
                                 "File: " + my_file()  + " not found");
    }

    // read the RDF/XML file
        model.read(in, "");
        
        
        String queryString ="PREFIX owl: <http://www.w3.org/2002/07/owl#>"+
        "PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>"+
        "PREFIX my: <http://www.semanticweb.org/car_ontology#>"+
        "PREFIX xsd:<http://www.w3.org/2001/XMLSchema#>"+
        "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"+
                
        "select ?subclass where{?subclass rdfs:subClassOf my:"+TypeVComboBox.getSelectedItem()+".}";

            

    Query query = QueryFactory.create(queryString) ;


    QueryExecution qexec = QueryExecutionFactory.create(query, model) ;
    ResultSet rs = qexec.execSelect() ;
    
    for (;rs.hasNext() ; ) {
      QuerySolution r = rs.nextSolution() ;
        RDFNode x = r.get("subclass"); 
        
    
   

   

String c=x.toString();
   //String rep=c.replace("^^http://www.w3.org/2001/XMLSchema#integer","");
   if(c.contains("http://www.semanticweb.org/car_ontology#")){
     String rep=c.replace("http://www.semanticweb.org/car_ontology#","");
     CategoryVComboBox.addItem(rep);
             
    }}
    qexec.close();
    }//GEN-LAST:event_CategoryVComboBoxActionPerformed

    private void CategoryVComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CategoryVComboBoxMouseClicked
        //CategoryVComboBox.removeAllItems();
        
        OntModel model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM_RULE_INF ); 
        InputStream in = FileManager.get().open( my_file() );
        if (in == null) {
        throw new IllegalArgumentException(
                                 "File: " + my_file()  + " not found");
    }

    // read the RDF/XML file
        model.read(in, "");
        
        
        String queryString ="PREFIX owl: <http://www.w3.org/2002/07/owl#>"+
        "PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>"+
        "PREFIX my: <http://www.semanticweb.org/car_ontology#>"+
        "PREFIX xsd:<http://www.w3.org/2001/XMLSchema#>"+
        "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"+
        "select ?x where {?x rdfs:subClassOf my:"+TypeVComboBox.getSelectedItem()+".}"        ;
        

            

    Query query = QueryFactory.create(queryString) ;


    QueryExecution qexec = QueryExecutionFactory.create(query, model) ;
    ResultSet rs = qexec.execSelect() ;
    
    for (;rs.hasNext() ; ) {
      QuerySolution r = rs.nextSolution() ;
        RDFNode x = r.get("x"); 
        
    
   

   

String c=x.toString();
   //String rep=c.replace("^^http://www.w3.org/2001/XMLSchema#integer","");
   if(c.contains("http://www.semanticweb.org/car_ontology#")){
     String rep=c.replace("http://www.semanticweb.org/car_ontology#","");
     CategoryVComboBox.addItem(rep);
             
    }}
    qexec.close();       
    
    }//GEN-LAST:event_CategoryVComboBoxMouseClicked

    private void jComboBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox7ActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jComboBox7ActionPerformed

    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox6ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jComboBox6ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox3MouseClicked
        // TODO add your handling code here:
        
        jComboBox3.removeAllItems();
        
         OntModel model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM_RULE_INF ); 
        InputStream in = FileManager.get().open( my_file() );
        if (in == null) {
        throw new IllegalArgumentException(
                                 "File: " + my_file()  + " not found");
    }

    // read the RDF/XML file
        model.read(in, "");
        
        
        String queryString ="PREFIX owl: <http://www.w3.org/2002/07/owl#>"+
        "PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>"+
        "PREFIX my: <http://www.semanticweb.org/car_ontology#>"+
        "PREFIX xsd:<http://www.w3.org/2001/XMLSchema#>"+
        "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"+
        "select ?x where {?x rdfs:subClassOf my:"+jComboBox1.getSelectedItem()+".}"        ;
        

            

    Query query = QueryFactory.create(queryString) ;


    QueryExecution qexec = QueryExecutionFactory.create(query, model) ;
    ResultSet rs = qexec.execSelect() ;
    
    for (;rs.hasNext() ; ) {
      QuerySolution r = rs.nextSolution() ;
        RDFNode x = r.get("x"); 
        
    
   

   

String c=x.toString();
   //String rep=c.replace("^^http://www.w3.org/2001/XMLSchema#integer","");
   if(c.contains("http://www.semanticweb.org/car_ontology#")){
     String rep=c.replace("http://www.semanticweb.org/car_ontology#","");
     jComboBox3.addItem(rep);
             
    }}
    qexec.close();
    }//GEN-LAST:event_jComboBox3MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:jComboBox1
        System.gc();
        OntModel model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM_RULE_INF ); 
        InputStream in = FileManager.get().open( my_file() );
        if (in == null) {
        throw new IllegalArgumentException(
                                 "File: " + my_file()  + " not found");
    }

    // read the RDF/XML file
        model.read(in, "");
        
        
        String queryString ="PREFIX owl: <http://www.w3.org/2002/07/owl#>"+
        "PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>"+
        "PREFIX my: <http://www.semanticweb.org/car_ontology#>"+
        "PREFIX xsd:<http://www.w3.org/2001/XMLSchema#>"+
        "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"+
        "select ?vehicle (count(?vehicle)as ?total) where {?vehicle my:has_owner ?owner.?vehicle a my:"+jComboBox3.getSelectedItem()+".}group by ?vehicle order by desc(?total)" ;   
               
        

            

    Query query = QueryFactory.create(queryString) ;

    QueryExecution qexec = QueryExecutionFactory.create(query, model) ;

    ResultSet rs = qexec.execSelect() ;

    String j=ResultSetFormatter.asText(rs);
    
    String j1=j.replace("http://www.semanticweb.org/car_ontology#","");

    textArea1.setText(j1);

    ResultSetFormatter.out(System.out, rs, query);
    
    qexec.close();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
         OntModel model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM_RULE_INF ); 
        InputStream in = FileManager.get().open( my_file() );
        if (in == null) {
        throw new IllegalArgumentException(
                                 "File: " + my_file()  + " not found");
    }

    // read the RDF/XML file
        model.read(in, "");
        
        
        String queryString="PREFIX owl: <http://www.w3.org/2002/07/owl#>"+
                     "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>"+
                    "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"+
                    "PREFIX my: <http://www.semanticweb.org/car_ontology#>"+
                    "SELECT DISTINCT ?vehicle ?price "+
                    "WHERE{?vehicle a my:Vehicle. "+
                    "?vehicle my:has_price ?price "+
                "FILTER( ?price<"+jTextField1.getText()+")}ORDER BY ?price";
	
		
		

        

            

    Query query = QueryFactory.create(queryString) ;

    QueryExecution qexec = QueryExecutionFactory.create(query, model) ;

    ResultSet rs = qexec.execSelect() ;

    String j=ResultSetFormatter.asText(rs);
    
    String j1=j.replace("http://www.semanticweb.org/car_ontology#","");

    textArea1.setText(j1);

    ResultSetFormatter.out(System.out, rs, query);
    
    qexec.close();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        OntModel model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM_RULE_INF ); 
        InputStream in = FileManager.get().open( my_file() );
        if (in == null) {
        throw new IllegalArgumentException(
                                 "File: " + my_file()  + " not found");
    }

    // read the RDF/XML file
        model.read(in, "");
        
        
        String queryString="PREFIX owl: <http://www.w3.org/2002/07/owl#>"+
                     "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>"+
                    "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"+
                    "PREFIX my: <http://www.semanticweb.org/car_ontology#>"+
                    "SELECT ?vehicle ?age "+
                    "WHERE{?person my:owns?vehicle. "+
                    "?person my:age ?age "+
                "FILTER( ?age>="+jComboBox6.getSelectedItem()+" && ?age<="+jComboBox7.getSelectedItem()+")}ORDER BY ?age";
	
		
		

        

            

    Query query = QueryFactory.create(queryString) ;

    QueryExecution qexec = QueryExecutionFactory.create(query, model) ;

    ResultSet rs = qexec.execSelect() ;

    String j=ResultSetFormatter.asText(rs);
    
    String j1=j.replace("http://www.semanticweb.org/car_ontology#","");

    textArea1.setText(j1);

    ResultSetFormatter.out(System.out, rs, query);
    
    qexec.close();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jComboBox6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox6MouseClicked
        // TODO add your handling code here:
        int limit_age=75;
        for(int i=18;i<=limit_age;i++){
            String age=String.valueOf(i);jComboBox6.addItem(age);}
    }//GEN-LAST:event_jComboBox6MouseClicked

    private void jComboBox7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox7MouseClicked
        // TODO add your handling code here:
        int limit_age=75;
        for(int i=18;i<=limit_age;i++){
                String age=String.valueOf(i);jComboBox7.addItem(age);}
    }//GEN-LAST:event_jComboBox7MouseClicked

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        OntModel model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM_RULE_INF ); 
        InputStream in = FileManager.get().open(my_file() );
        if (in == null) {
        throw new IllegalArgumentException(
                                 "File: " + my_file()  + " not found");
    }

    // read the RDF/XML file
        model.read(in, "");
        
        
        String queryString="PREFIX owl: <http://www.w3.org/2002/07/owl#>"+
                     "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>"+
                    "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"+
                    "PREFIX my: <http://www.semanticweb.org/car_ontology#>"+
                    "SELECT ?person (sum(?price)as ?average_score)"+
                    "WHERE{?person my:owns?vehicle. "+
                    "?vehicle my:has_price ?price } GROUP BY ?person ORDER BY DESC(?average_score)";
	
		
		

        

            

    Query query = QueryFactory.create(queryString) ;

    QueryExecution qexec = QueryExecutionFactory.create(query, model) ;

    ResultSet rs = qexec.execSelect() ;

    String j=ResultSetFormatter.asText(rs);
    
    String j1=j.replace("http://www.semanticweb.org/car_ontology#","");

    textArea1.setText(j1);

    ResultSetFormatter.out(System.out, rs, query);
    
    qexec.close();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        
        String clear="";
        textArea1.setText(clear);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        
        String uri="http://www.semanticweb.org/car_ontology#";
    OntModel model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM_RULE_INF ); 
        InputStream in = FileManager.get().open(my_file());
        if (in == null) {
        throw new IllegalArgumentException(
                                 "File: " + my_file()  + " not found");
    }

    // read the RDF/XML file
        model.read(in, "");
        
    
    
    
  Individual p1 = model.createIndividual( uri+ModelTextField.getText(),model.createResource(uri+CategoryVComboBox.getSelectedItem().toString()));
if(!(ModelTextField.getText().isEmpty()) && !(PriceTextField.getText().isEmpty()) && !(ScorejTextField.getText().isEmpty())  && !(SpeedTextField4.getText().isEmpty()) && !(FuelTextField.getText().isEmpty()) && !(jTextField2.getText().isEmpty())){
    p1.addRDFType(OWL2.NamedIndividual);
    
    DatatypeProperty price=model.createDatatypeProperty(uri+"has_price");  
    p1.addProperty(price,model.createTypedLiteral(new Integer(PriceTextField.getText())));
    //System.out.println("has_price");

    DatatypeProperty score=model.createDatatypeProperty(uri+"has_score");  
    p1.addProperty(score,model.createTypedLiteral(new Integer(ScorejTextField.getText())));
    //System.out.println("has_score");
    if(!(SafeTextField.getText().equals("Only For Automobiles"))){
    DatatypeProperty safe=model.createDatatypeProperty(uri+"safe_score");  
    p1.addProperty(safe,model.createTypedLiteral(new Integer(SafeTextField.getText())));
    //System.out.println("safe_score");
    }
    else{
        //System.out.println("No safe score");/*do nothing*/
    }
    DatatypeProperty speed=model.createDatatypeProperty(uri+"top_speed");  
    p1.addProperty(speed,model.createTypedLiteral(new Integer(SpeedTextField4.getText())));
//System.out.println("Speed");
    DatatypeProperty fuel_con=model.createDatatypeProperty(uri+"fuel_consumption");  
    p1.addProperty(fuel_con,model.createTypedLiteral(new Integer(FuelTextField.getText())));
//System.out.println("Fuel");

    DatatypeProperty colour=model.createDatatypeProperty(uri+"has_colour");  
    p1.addProperty(colour,model.createTypedLiteral(jTextField2.getText()));
    //System.out.println("has_colour");
}


 OutputStream out = null;
     try {
         out = new FileOutputStream(my_file());
     } catch (FileNotFoundException ex) {
         Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
     }
model.write( out); // readable rdf/xml
     try {
         out.close();
     } catch (IOException ex) {
         Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
     }
    
    
    }//GEN-LAST:event_jButton2MouseClicked

    private void AddCustomerButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddCustomerButtonMouseClicked
        // TODO add your handling code here:
          String uri="http://www.semanticweb.org/car_ontology#";
    OntModel model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM_RULE_INF ); 
        InputStream in = FileManager.get().open(my_file() );
        if (in == null) {
        throw new IllegalArgumentException(
                                 "File: " + my_file()  + " not found");
    }

    // read the RDF/XML file
        model.read(in, "");
        
    
    String c=CustomerTextField.getText().toString();
    String cust=c.replace(" ","_");

    int a=Integer.parseInt(CustAgejComboBox5.getSelectedItem().toString());
    
  Individual p1 = model.createIndividual( uri+cust,model.createResource(uri+GenderComboBox.getSelectedItem()));//customer
  Individual p2 = model.createIndividual( uri+ModelComboBox5.getSelectedItem(),model.createResource(uri+jComboBox4.getSelectedItem()));//vehicle
  
  //p1.addRDFType(OWL2.NamedIndividual);
  //p2.addRDFType(OWL2.NamedIndividual);
    
    ObjectProperty owns=model.createObjectProperty(uri+"owns");  
    
    p1.addProperty(owns,p2);
    //model.add(p1,owns,p2);
    
    //System.out.println("owns");

    DatatypeProperty age=model.createDatatypeProperty(uri+"age");  
    p1.addProperty(age,model.createTypedLiteral(a));
    //System.out.println("age");
    
    
    
    


 OutputStream out = null;
     try {
         out = new FileOutputStream(my_file());
     } catch (FileNotFoundException ex) {
         Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
     }
model.write( out); // readable rdf/xml
     try {
         out.close();
     } catch (IOException ex) {
         Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
     }
     model.removeAll();
    }//GEN-LAST:event_AddCustomerButtonMouseClicked

    private void jComboBox4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox4MouseClicked
        // TODO add your handling code here:
        
        jComboBox4.removeAllItems();
        
        OntModel model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM_RULE_INF ); 
        InputStream in = FileManager.get().open( my_file() );
        if (in == null) {
        throw new IllegalArgumentException(
                                 "File: " + my_file()  + " not found");
    }

    // read the RDF/XML file
        model.read(in, "");
        
        
        String queryString ="PREFIX owl: <http://www.w3.org/2002/07/owl#>"+
        "PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>"+
        "PREFIX my: <http://www.semanticweb.org/car_ontology#>"+
        "PREFIX xsd:<http://www.w3.org/2001/XMLSchema#>"+
        "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"+
        "select ?x where {?x rdfs:subClassOf my:"+ComboBox5.getSelectedItem()+".}"        ;
        

            

    Query query = QueryFactory.create(queryString) ;


    QueryExecution qexec = QueryExecutionFactory.create(query, model) ;
    ResultSet rs = qexec.execSelect() ;
    
    for (;rs.hasNext() ; ) {
      QuerySolution r = rs.nextSolution() ;
        RDFNode x = r.get("x"); 
        
    
   

   

String c=x.toString();
   //String rep=c.replace("^^http://www.w3.org/2001/XMLSchema#integer","");
   if(c.contains("http://www.semanticweb.org/car_ontology#")){
     String rep=c.replace("http://www.semanticweb.org/car_ontology#","");
     jComboBox4.addItem(rep);
             
    }}
    qexec.close();       
  

    }//GEN-LAST:event_jComboBox4MouseClicked

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void ModelComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModelComboBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ModelComboBox5ActionPerformed

    private void ModelComboBox5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ModelComboBox5MouseClicked
        // TODO add your handling code here:
        
        ModelComboBox5.removeAllItems();
                OntModel model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM_RULE_INF ); 
        InputStream in = FileManager.get().open( my_file() );
        if (in == null) {
        throw new IllegalArgumentException(
                                 "File: " + my_file()  + " not found");
    }

    // read the RDF/XML file
        model.read(in, "");
        
        
        String queryString ="PREFIX owl: <http://www.w3.org/2002/07/owl#>"+
        "PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>"+
        "PREFIX my: <http://www.semanticweb.org/car_ontology#>"+
        "PREFIX xsd:<http://www.w3.org/2001/XMLSchema#>"+
        "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"+
        "select ?x where {?x a my:"+jComboBox4.getSelectedItem()+".}"        ;
        

            

    Query query = QueryFactory.create(queryString) ;


    QueryExecution qexec = QueryExecutionFactory.create(query, model) ;
    ResultSet rs = qexec.execSelect() ;
    
    for (;rs.hasNext() ; ) {
      QuerySolution r = rs.nextSolution() ;
        RDFNode x = r.get("x"); 
        
    
   

   

String c=x.toString();
   //String rep=c.replace("^^http://www.w3.org/2001/XMLSchema#integer","");
   if(c.contains("http://www.semanticweb.org/car_ontology#")){
     String rep=c.replace("http://www.semanticweb.org/car_ontology#","");
     ModelComboBox5.addItem(rep);
             
    }}
    qexec.close();
    

    }//GEN-LAST:event_ModelComboBox5MouseClicked

    private void CustAgejComboBox5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustAgejComboBox5MouseClicked
        // TODO add your handling code here:
        CustAgejComboBox5.removeAllItems();
         int limit_age=75;
        for(int i=18;i<=limit_age;i++){
            String age=String.valueOf(i);CustAgejComboBox5.addItem(age);}
    }//GEN-LAST:event_CustAgejComboBox5MouseClicked

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseClicked
        
         
         
         OntModel model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM_RULE_INF ); 
        InputStream in = FileManager.get().open( my_file() );
        if (in == null) {
        throw new IllegalArgumentException(
                                 "File: " + my_file()  + " not found");
    }

    // read the RDF/XML file
        model.read(in, "");
        String selected=jTextField3.toString();
        
        String v=jTextField3.getText();
       
        
        String queryString ="PREFIX owl: <http://www.w3.org/2002/07/owl#>"+
        "PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>"+
        "PREFIX my: <http://www.semanticweb.org/car_ontology#>"+
        "PREFIX xsd:<http://www.w3.org/2001/XMLSchema#>"+
        
        "SELECT ?x ?price ?fuel_cons"+
            " WHERE {optional{?x my:has_price ?price. "+
                "?x my:fuel_consumption ?fuel_cons. "+
                
                "FILTER(?x=my:"+v+") }} ";

            
        
        Query query = QueryFactory.create(queryString) ;


    QueryExecution qexec = QueryExecutionFactory.create(query, model) ;
    ResultSet rs = qexec.execSelect() ;
   
   String j=ResultSetFormatter.asText(rs);
    
    String j1=j.replace("http://www.semanticweb.org/car_ontology#","");

    jTextArea3.setText(j1);

    ResultSetFormatter.out(System.out, rs, query);
    
    
    qexec.close();
    
       
    }//GEN-LAST:event_jButton11MouseClicked

    private void jComboBox2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2MouseClicked

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jComboBox5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox5MouseClicked
        // TODO add your handling code here:
        jComboBox5.removeAllItems();
        
        
         OntModel model = ModelFactory.createOntologyModel(); 
        InputStream in = FileManager.get().open( my_file() );
        if (in == null) {
        throw new IllegalArgumentException(
                                 "File: " + my_file()  + " not found");
    }

    // read the RDF/XML file
        model.read(in, "");
        
        
        String queryString ="PREFIX owl: <http://www.w3.org/2002/07/owl#>"+
        "PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>"+
        "PREFIX my: <http://www.semanticweb.org/car_ontology#>"+
        "PREFIX xsd:<http://www.w3.org/2001/XMLSchema#>"+
        "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"+
        "select ?x where {?x rdfs:subClassOf my:"+jComboBox2.getSelectedItem()+".}"        ;
        

            

    Query query = QueryFactory.create(queryString) ;


    QueryExecution qexec = QueryExecutionFactory.create(query, model) ;
    ResultSet rs = qexec.execSelect() ;
    
    for (;rs.hasNext() ; ) {
      QuerySolution r = rs.nextSolution() ;
        RDFNode x = r.get("x"); 
        
    
   

   

String c=x.toString();
   //String rep=c.replace("^^http://www.w3.org/2001/XMLSchema#integer","");
   if(c.contains("http://www.semanticweb.org/car_ontology#")){
     String rep=c.replace("http://www.semanticweb.org/car_ontology#","");
     jComboBox5.addItem(rep);
             
    }}
    qexec.close();
   
    }//GEN-LAST:event_jComboBox5MouseClicked

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        
        OntModel model = ModelFactory.createOntologyModel(OntModelSpec.OWL_MEM_RULE_INF ); 
        InputStream in = FileManager.get().open( my_file() );
        if (in == null) {
        throw new IllegalArgumentException(
                                 "File: " + my_file()  + " not found");
    }

    // read the RDF/XML file
        model.read(in, "");
        String type=jComboBox5.getSelectedItem().toString();
        
        String v=jTextField3.getText();
        
        
        String queryString ="PREFIX owl: <http://www.w3.org/2002/07/owl#>"+
        "PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>"+
        "PREFIX my: <http://www.semanticweb.org/car_ontology#>"+
        "PREFIX xsd:<http://www.w3.org/2001/XMLSchema#>"+
        
        "SELECT  ?better ?fuel_co ?price ?score \n" +
                "WHERE {?better a my:"+type+". \n"+  
                "?better my:better_than ?y.\n"+
                "?better my:has_price ?price.\n"+
                "?better my:fuel_consumption ?fuel_co.\n"+
                "FILTER(?y=my:"+v+")}";
               /* "WHERE{ \n" +
	"?better a my:"+type+".\n" +
"?my_v my:has_price ?my_v_price.\n" +
"?my_v my:top_speed ?my_v_speed.\n" +
"?my_v my:fuel_consumption ?my_v_fuel_cons. \n" +

"?better my:has_price ?better_price.\n" +
"optional{?better my:fuel_consumption ?better_uel_consf.\n" +

"?better my:top_speed ?better_speed.}\n" +
"?better my:has_score ?better_score. \n "+
"?better my:better_than ?my_v.\n" +
"filter(?my_v= my:"+v+")}\n ";*/
            
        
        Query query = QueryFactory.create(queryString) ;


    QueryExecution qexec = QueryExecutionFactory.create(query, model) ;
    ResultSet rs = qexec.execSelect() ;
   
   String j=ResultSetFormatter.asText(rs);
    
    String j1=j.replace("http://www.semanticweb.org/car_ontology#","");

    jTextArea4.setText(j1);
    

    ResultSetFormatter.out(System.out, rs, query);
    
    
    qexec.close();
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton AddCustomerButton;
    public static javax.swing.JComboBox<String> CategoryVComboBox;
    public static javax.swing.JComboBox<String> ClassesComboBox;
    private javax.swing.JComboBox<String> ComboBox5;
    public static javax.swing.JComboBox<String> CustAgejComboBox5;
    private javax.swing.JTextField CustomerTextField;
    public static javax.swing.JLabel CustomerTextLabel;
    public static javax.swing.JTextField FuelTextField;
    public static javax.swing.JComboBox<String> GenderComboBox;
    public static javax.swing.JComboBox<String> ModelComboBox5;
    public static javax.swing.JTextField ModelTextField;
    public static javax.swing.JTextField PriceTextField;
    public static javax.swing.JTextField SafeTextField;
    public static javax.swing.JTextField ScorejTextField;
    public static javax.swing.JTextField SpeedTextField4;
    private javax.swing.JLabel Tittle_label;
    public static javax.swing.JComboBox<String> TypeVComboBox;
    public static javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    public static javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    public static javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    public static javax.swing.JButton jButton9;
    public static javax.swing.JComboBox<String> jComboBox1;
    public static javax.swing.JComboBox<String> jComboBox2;
    public static javax.swing.JComboBox<String> jComboBox3;
    public static javax.swing.JComboBox<String> jComboBox4;
    public static javax.swing.JComboBox<String> jComboBox5;
    public static javax.swing.JComboBox<String> jComboBox6;
    public static javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    public static javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    public static javax.swing.JLabel jLabel4;
    public static javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    public static javax.swing.JTextArea jTextArea1;
    public static javax.swing.JTextArea jTextArea3;
    public static javax.swing.JTextArea jTextArea4;
    public static javax.swing.JTextField jTextField1;
    public static javax.swing.JTextField jTextField2;
    public static javax.swing.JTextField jTextField3;
    public static java.awt.TextArea textArea1;
    // End of variables declaration//GEN-END:variables
}
